name: DTAP Deployment
on:
  push:
    branches:
      - master
      - staging
      - development

jobs:
  deploy_dev:
    name: DEV
    if: github.ref == 'refs/heads/development'
    environment: 
      name: DEV   
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Prune old images
      run: docker image prune -a -f
      working-directory: ${{ github.workspace }}

    - name: Build and start container for Development
      run: |
        docker compose build
        docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-client up -d --remove-orphans
      env:
        ENV_KEY: '${{ vars.ENV_KEY }}'           
        ENV_PORT: '${{ vars.ENV_PORT }}'   
        ENV_PORT_SSL: '${{ vars.ENV_PORT_SSL }}'
        API_URL: '${{ vars.API_URL}}'
        AZURE_AD_REDIRECT_URI: '${{ vars.AZURE_AD_REDIRECT_URI }}'
        ADMIN_PORTAL_URI: '${{ vars.ADMIN_PORTAL_URI }}'
      working-directory: ${{ github.workspace }}

  deploy_tst:
    name: TST
    if: github.ref == 'refs/heads/staging'
    environment: 
      name: TST   
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Prune old images
      run: docker image prune -a -f
      working-directory: ${{ github.workspace }}

    - name: Build and start container for Development
      run: |
        docker compose build
        docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-client up -d --remove-orphans
      env:
        ENV_KEY: '${{ vars.ENV_KEY }}'
        ENV_PORT: '${{ vars.ENV_PORT }}'
        ENV_PORT_SSL: '${{ vars.ENV_PORT_SSL }}'
        API_URL: '${{ vars.API_URL}}'
        AZURE_AD_REDIRECT_URI: '${{ vars.AZURE_AD_REDIRECT_URI }}'
        ADMIN_PORTAL_URI: '${{ vars.ADMIN_PORTAL_URI }}'
      working-directory: ${{ github.workspace }}

  deploy_acc:
    name: ACC
    if: github.ref == 'refs/heads/staging'
    environment: 
      name: ACC   
    runs-on: self-hosted
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Prune old images
      run: docker image prune -a -f
      working-directory: ${{ github.workspace }}

    - name: Build and start container for Development
      run: |
        docker compose build
        docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-client up -d --remove-orphans
      env:
        ENV_KEY: '${{ vars.ENV_KEY }}'
        ENV_PORT: '${{ vars.ENV_PORT }}'
        ENV_PORT_SSL: '${{ vars.ENV_PORT_SSL }}'
        API_URL: '${{ vars.API_URL}}'
        AZURE_AD_REDIRECT_URI: '${{ vars.AZURE_AD_REDIRECT_URI }}'
        ADMIN_PORTAL_URI: '${{ vars.ADMIN_PORTAL_URI }}'
      working-directory: ${{ github.workspace }}      
        
  deploy_prod:
    name: PRD
    if: github.ref == 'refs/heads/master'
    environment: 
      name: PRD        
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prune old images
        run: docker image prune -a -f
        working-directory: ${{ github.workspace }}

      - name: Build and start container for Production
        run: |
          docker compose build
          docker compose -f docker-compose.yml -p ${{ vars.ENV_KEY }}-client up -d --remove-orphans
        env:
          ENV_KEY: '${{ vars.ENV_KEY }}'
          ENV_PORT: '${{ vars.ENV_PORT }}'
          ENV_PORT_SSL: '${{ vars.ENV_PORT_SSL }}'
          API_URL: '${{ vars.API_URL}}'
          AZURE_AD_REDIRECT_URI: '${{ vars.AZURE_AD_REDIRECT_URI }}'
          ADMIN_PORTAL_URI: '${{ vars.ADMIN_PORTAL_URI }}'
        working-directory: ${{ github.workspace }}
